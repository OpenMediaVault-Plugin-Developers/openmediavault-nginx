#!/bin/bash
#
# Copyright (C) 2014-2017 OpenMediaVault Plugin Developers
#
# This file is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this file. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_PLUGIN_XPATH="/config/services/phpfpm"
OMV_PHPFPM_POOLS_XPATH="$OMV_PLUGIN_XPATH/pools"
OMV_PHPFPM_POOL_XPATH="$OMV_PHPFPM_POOLS_XPATH/pool"

OMV_NGINX_PLUGIN_XPATH="/config/services/nginx"

# PHP-FPM paths.
PHP_FPM_POOL_DIR="/etc/php/7.0/fpm/pool.d"

generate_fpm_config()
{
    local xpath="$1"

    local uuid config
    uuid="$(omv_config_get "$xpath/uuid")"
    config="$PHP_FPM_POOL_DIR/$uuid.conf"

    # PHP variables
    local username groupname
    username="$(omv_config_get "$xpath/username")"
    groupname="$(omv_config_get "$xpath/groupname")"

    local pm_max_children pm_start_servers pm_min_spare_servers pm_max_spare_servers pm_max_requests
    pm_max_children="$(omv_config_get "$xpath/pm_max_children")"
    pm_start_servers="$(omv_config_get "$xpath/pm_start_servers")"
    pm_min_spare_servers="$(omv_config_get "$xpath/pm_min_spare_servers")"
    pm_max_spare_servers="$(omv_config_get "$xpath/pm_max_spare_servers")"
    pm_max_requests="$(omv_config_get "$xpath/pm_max_requests")"

    local php_display_errors php_html_errors php_max_execution_time php_memory_limit php_post_max_size php_upload_max_filesize
    php_display_errors="$(omv_config_get "$xpath/php_display_errors")"
    php_html_errors="$(omv_config_get "$xpath/php_html_errors")"
    php_max_execution_time="$(omv_config_get "$xpath/php_max_execution_time")"
    php_memory_limit="$(omv_config_get "$xpath/php_memory_limit")"
    php_post_max_size="$(omv_config_get "$xpath/php_post_max_size")"
    php_upload_max_filesize="$(omv_config_get "$xpath/php_upload_max_filesize")"

    local php_display_errors php_html_errors
    php_display_errors="$(booleanToOnOff "$php_display_errors")"
    php_html_errors="$(booleanToOnOff "$php_html_errors")"

    if [ "$php_memory_limit" -gt -1 ]; then
        php_memory_limit="${php_memory_limit}M"
    fi

    cat <<EOF > "$config"
[$uuid]
listen = /var/run/fpm-$uuid.sock
listen.owner = www-data
listen.group = www-data
listen.mode = 0600

user = $username
group = $groupname

; Process manager
pm = dynamic
pm.max_children = $pm_max_children
pm.start_servers = $pm_start_servers
pm.min_spare_servers = $pm_min_spare_servers
pm.max_spare_servers = $pm_max_spare_servers
pm.max_requests = $pm_max_requests

; php.ini
php_flag[display_errors] = $php_display_errors
php_flag[html_errors] = $php_html_errors
php_value[max_execution_time] = $php_max_execution_time
php_value[memory_limit] = $php_memory_limit
php_value[post_max_size] = ${php_post_max_size}M
php_value[upload_max_filesize] = ${php_upload_max_filesize}M
EOF

    xmlstarlet sel -t -m "$xpath" \
        -i "string-length(extra_options) > 0" \
            -o "; extra options" -n \
            -v extra_options -n \
        -b \
        "$OMV_CONFIG_FILE" | xmlstarlet unesc >> "$config"
}

booleanToOnOff()
{
    if [ "$1" -eq 1 ]; then
        echo "On"
    else
        echo "Off"
    fi
}

remove_fpm_configurations()
{
    find "$PHP_FPM_POOL_DIR" -type f -regextype sed -regex ".*/[a-f0-9\-]\{36\}.*" -delete
}

remove_fpm_configurations

if [ "$(omv_config_get "$OMV_NGINX_PLUGIN_XPATH/enable")" -eq "1" ]; then

    # Iterate through enabled servers.
    server_count="$(omv_config_get_count "$OMV_PHPFPM_POOL_XPATH")"
    index=1

    while [ "$index" -lt "$server_count" ] || [ "$index" -eq "$server_count" ]; do

        current_server_xpath="$OMV_PHPFPM_POOL_XPATH[$index]"
        generate_fpm_config "$current_server_xpath"

        index=$((index + 1))

    done
fi

exit 0
